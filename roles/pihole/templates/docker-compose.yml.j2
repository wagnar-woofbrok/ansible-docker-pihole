version: '3.5'

services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # ports:
    #   - "53:53/tcp"
    #   - "53:53/udp"
    #   - "80:80/tcp"
    #   - "443:443/tcp"
    env_file:
      - /opt/dns/config/etc-pihole/pihole.env
    # NOTE: IFF running PiHole-Docker on redhat systems, the volumes
    # entries must end in "...:z"
    # https://github.com/pi-hole/docker-pi-hole/#running-pi-hole-docker
    volumes:
      - /opt/dns/config/etc-pihole:/etc/pihole
      - /opt/dns/config/etc-dnsmasq.d:/etc/dnsmasq.d
    dns:
      - 127.0.0.1
      - 9.9.9.9 # bootstrap DNS, not used for queries
    # networks:
    #   backend:
    #     ipv4_address: 10.0.1.3
    # docker-pi-hole isse #593
    # https://github.com/pi-hole/docker-pi-hole/issues/593
    privileged: true
    network_mode: host
    cap_add:
      - NET_ADMIN 				# modify routing tables and other network-related operations
{% if lookup("env", "DNSCRYPT_ENABLED") == "true" %}
    depends_on:
      - dnscrypt
{% endif %}
    restart: unless-stopped

{% if lookup("env", "DNSCRYPT_ENABLED") == "true" %}
  dnscrypt:
    container_name: dnscrypt
    image: klutchell/dnscrypt-proxy:latest
    volumes:
      - /opt/dns/dnscrypt-proxy:/config
    dns:
      - 1.1.1.1 # bootstrap DNS, not used for queries
    # expose:
    #   - "5353/tcp"
    #   - "5353/udp"
    network_mode: host
    # networks:
    #   backend:
    #     ipv4_address: 10.0.1.2
    restart: unless-stopped
{% endif %}

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.1.0/24
