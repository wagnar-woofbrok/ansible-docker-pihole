---
# tasks file for pihole

# TODO
# Disable || configure resolvconf   (raspbian default DNS)

- name: Create dirs for dns services files
  ansible.builtin.shell: |
    mkdir -p /opt/dns
    mkdir -p /opt/dns/config
    mkdir -p /opt/dns/config/etc-pihole
    mkdir -p /opt/dns/config/etc-dnscrypt

- name: Add PiHole as the (only) static DNS server on the Pi
  ansible.builtin.shell: |
    echo "static domain_name_servers=127.0.0.1" >> /etc/dhcpcd.conf
    sudo service dhcpcd restart
  # (Validate) check the regenerated /etc/resolv.conf file

- name: Process env_file for pihole
  ansible.builtin.template:
    src: templates/pihole.env.j2
    dest: /opt/dns/config/pihole.env
    mode: '0755'

- name: Process docker-compose.yml file for pihole server
  ansible.builtin.template:
    src: templates/docker-compose.yml.j2
    dest: /opt/dns/docker-compose.yml
    mode: '0755'

- name: Install dns.service unit file
  ansible.builtin.template:
    src: templates/dns.service.j2
    dest: /etc/systemd/system/dns.service
    mode: '0640'

- name: Enable and start the dockerized dns service
  ansible.builtin.shell: |
    sudo systemctl enable dns.service
    sudo systemctl start dns.service

- name: Include and run systemd-resolved configuration tasks
  ansible.builtin.include_tasks: configure_systemd.yml


# TEST
#   name resolution should show resolving @ 127.0.0.1
# dig ...
# nslookup ... 